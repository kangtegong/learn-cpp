```
#include <iostream>

using namespace std;

int main()
{
	// C언어의 배열 스타일 문자열
	char myString[] = "string";		// 마지막에 널문자 삽입

	cout << sizeof(myString) / sizeof(myString[0]) << endl;		// 널문자 포함 7글자

	return 0;
}

```

입력받기

```
#include <iostream>

using namespace std;

int main()
{
	// C언어의 배열 스타일 문자열
	char myString[255];

	cin >> myString;

	cout << myString << endl;

	return 0;
}

```

문자열은 널문자를 만나기 전까지만 출력된다.

```
#include <iostream>

using namespace std;

int main()
{
	// C언어의 배열 스타일 문자열
	char myString[255];

	cin >> myString;
	
	// 이렇게 중간에 널문자를 삽입하면 여기까지만 출력이 이루어짐
	myString[4] = '\0';

	cout << myString << endl;

	return 0;
}

```

cin은 빈칸을 기준으로 입력받는다.

> jack hello 라고 입력하면 hello가 출력이 안된다.


따라서 getline으로 입력받아야 한다.

```
	#include <iostream>

	using namespace std;

	int main()
	{
		// C언어의 배열 스타일 문자열
		char myString[255];

		// cin >> myString;
		cin.getline(myString, 255);

		cout << myString << endl;

		return 0;
	}


```

c 스타일의 문자열 라이브러리 <cstring>

```
#include <iostream>
#include <cstring>

using namespace std;

int main()
{
	char source[] = "Copy this!";
	char dest[50];
	strcpy(dest, source);

	cout << source << endl;
	cout << dest << endl;
}
```

strcpy의 사용을 권장하지 않음

```
#include <iostream>
#include <cstring>

using namespace std;

int main()
{
	char source[] = "Copy this!";
	char dest[50];
	// char dest[5]; 이렇게 문자열 자체보다 주소가 적을 경우 보안 상 위험할 수도 있음
	strcpy(dest, source);

	cout << source << endl;
	cout << dest << endl;
}
```

그래서 `strcpy_s(dest, 50, source);` 를 사용함
두번째 파라미터에서는 dest의 메모리 크기와 동일하게 넣어주기.

이 밖에도 strcat, strcmp ...

참고로 strcmp는 주의가 필요한데, 
strcmp는 같으면 "0"을 리턴한다. 이거 헷갈리는 경우 많음

