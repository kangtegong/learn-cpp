동적할당배열

런타임에 배열의 사이즈 결정

그때그때 메모리를 OS로부터 받아옴
유동적인 메모리 관리 가능

```
#include <iostream>

using namespace std;

int main()
{
	int length;

	cin >> length;

	// 동적 배열 할당은 이렇게 선언해주기
	int *array = new int[length];
	// 참고로 만일 모든 인덱스 요소를 0으로 초기화해주고 싶다면 아래와 같이 선언하기
	// int *array = new int[length]();


	array[0] = 1;
	array[1] = 2;

	for (int i = 0; i < length; ++i)
	{
		cout << (uintptr_t)&array[i] << endl;
		cout << array[i] << endl;
	}

	// 할당을 받았다면 반드시 delete해주기
	// 배열에 할당된 메모리 모두 지우기
	delete[] array;

	return 0;
}
```


```
#include <iostream>

using namespace std;

int main()
{
	int length;

	cin >> length;

	int *array = new int[length] { 11, 22, 33, 44, 55, 66 };

	array[0] = 1;
	array[1] = 2;

	for (int i = 0; i < length; ++i)
	{
		cout << (uintptr_t)&array[i] << endl;
		cout << array[i] << endl;
	}

	// 할당을 받았다면 반드시 delete해주기
	// 배열에 할당된 메모리 모두 지우기
	delete[] array;

	return 0;
}

```

> 결과창 : 만일 입력으로 10을 입력했다면

```
12454624
1
12454628
2
12454632
33
12454636
44
12454640
55
12454644
66
12454648
0
12454652
0
12454656
0
12454660
0
```

66까지 잘 출력되다가 나머지는 0으로 초기화됨

> 결과창 : 만일 입력으로 (초기화해준 값보다 적은) 2을 입력했다면

```
12454624
1
12454628
2

```

경고가 뜨게 됨



resizing도 가능할까?

직접적으로는 안된다 우회해서 리사이징해야함

1. 다른 더 큰 메모리를 갖고오고
2. 원래 값을 복사해서 붙여넣고
3. 덧붙이고 싶은 값을 덧붙여야함

