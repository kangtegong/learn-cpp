```
#include <iostream>
#include <string>	// 이거 include 해야함

using namespace std;

int main() 
{

	const char my_string[] = "Hello String";	// (기본적으로 사용하는 기능)한 글자를 여러번 나열	
	const string my_hello = "Hello World";		// (편의기능)일종의 사용자 정의 자료형
	// const string my_hello("Hello World");

	// string my_ID = 123; // 이건 안됨. 정수를 문자열로 암시적 형변환을 할 수 있는 방법은 없음
	string my_ID = "123";

	cout << my_hello << endl;
	cout << my_string << endl;
	
	return 0;
}
```


입력받기


```
#include <iostream>
#include <string>	// 이거 include 해야함

using namespace std;

int main() 
{

	cout << "Your Name? : " << endl;
	// std::string name;  // 이렇게도 가능
	string name;
	cin >> name;
	cout << "Your age? : " << endl;
	string age;
	cin >> age;

	cout << name << " " << age << " " << endl;


	return 0;
}
```

참고로 cin은 빈칸을 기준으로 하나의 입력으로 인식함

따라서 Jack엔터 21 엔터로 입력해도 되지만
Jack 21 이라고 치고 엔터를 쳐도 됨
이럴 떄 사용할 수 있는게 getline. 엔터를 칠 때까지 line을 쭉 입력받는 방법

```
#include <iostream>
#include <string>	// 이거 include 해야함

using namespace std;

int main() 
{

	cout << "Your Name? : " << endl;
	// std::string name;  // 이렇게도 가능
	string name;
	std::getline(std::cin, name);
	cout << "Your age? : " << endl;
	string age;
	std::getline(std::cin, name);

	cout << name << " " << age << " " << endl;


	return 0;
}
```

정수와 문자열 같이 입력받기

```
#include <iostream>
#include <string>	// 이거 include 해야함

using namespace std;

int main() 
{
	cout << "Your age? : " << endl;
	int age;
	cin >> age; 
	
	cout << "Your Name? : " << endl;
	string name;
	std::getline(std::cin, name);

	cout << name << " " << age << " " << endl;


	return 0;
}
```

이렇게만 해 주면 age를 입력후 엔터를 치면 바로 Name까지 age입력대로 입력된다.

```
Your age? :
21
Your Name? :
 21
```

이걸 해결하는 방법은 버퍼에서 첫번째 입력내용을 날려버리고 새롭게 입력을 받아달라
라고 코드를 짜는 것


```
std::cin.ignore(32767, '\n');

```

\n을 만날때까지 32767대의 숫자 (내가 표현할 수 있는 숫자의 최대)는 무시해라라는 뜻
`std::cin.ignore(32767, '\n');`의 32767이 불편하다면 아래처럼 바꾸자. (magic number는 없는게 좋다)


```
#include <limits>
std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
```


문자열의 길이 알고 싶을떄는

const string mystring = "Hello World"


mystring.length();	// 따옴표, 널문자제외 말그대로 문자 개수